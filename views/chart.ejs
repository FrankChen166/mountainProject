<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <title>產品圖表</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  </head>
  <body>
    <%- include("../views/partials/navbar.ejs") %>
    <h1>請點選要繪製的圖表</h1>
    <button class="chartType" data-type="bar">長條圖</button>
    <button class="chartType" data-type="doughnut">甜甜圈圖</button>
    <button class="chartType" data-type="pie">圓餅圖</button>
    <canvas id="myChart"></canvas>
    <h1 id="productId" style="display: none"><%= productId%></h1>
  </body>
  <script>
    let myChart = null;

    function fetchData(productId, type) {
      fetch(`/api/chart/${productId}`)
        .then((response) => response.json())
        .then((data) => {
          const productDetails = data.data.map((item) => ({
            label: `${item.productDetail} - ${item.productColor}`,
            quantity: item.quantity,
            backgroundColor: randomColor(),
          }));

          const ctx = document.getElementById("myChart").getContext("2d");

          // 销毁现有的图表
          if (myChart) {
            myChart.destroy();
          }

          myChart = new Chart(ctx, {
            type: type,
            data: {
              labels: productDetails.map((item) => item.label),
              datasets: [
                {
                  label: "銷貨數量",
                  data: productDetails.map((item) => item.quantity),
                  backgroundColor: productDetails.map(
                    (item) => item.backgroundColor
                  ),
                  borderColor: productDetails.map(
                    (item) => item.backgroundColor
                  ),
                  borderWidth: 1,
                },
              ],
            },
            options: {
              scales: {
                y: {
                  beginAtZero: true,
                },
              },
            },
          });
        })
        .catch((error) => {
          console.error("获取数据时出错:", error);
        });
    }

    function randomColor() {
      return "#" + Math.floor(Math.random() * 16777215).toString(16);
    }

    document.addEventListener("DOMContentLoaded", function () {
      const productId = document.getElementById("productId").innerText;
      const chartButtons = document.querySelectorAll(".chartType");

      chartButtons.forEach((button) => {
        button.addEventListener("click", function () {
          const type = this.getAttribute("data-type");
          fetchData(productId, type);
        });
      });
    });
  </script>
  <script
    src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
    integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
    crossorigin="anonymous"
  ></script>
  <script
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
    integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
    crossorigin="anonymous"
  ></script>
</html>
